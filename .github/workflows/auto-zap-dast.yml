name: Security Scan with OWASP ZAP

on:
  push:
    branches:
      - main
      - development
      - preproduction

jobs:
  security-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del c√≥digo  
        uses: actions/checkout@v4  

      - name: Crear archivo .env desde Secrets
        run: |
          echo "HYBRID_ANALYSIS_API_KEY=${{ secrets.HYBRID_ANALYSIS_API_KEY }}" >> .env
          echo "HYBRID_ANALYSIS_API_URL=${{ secrets.HYBRID_ANALYSIS_API_URL }}" >> .env
          echo "ML_MODEL_NAME_URI=${{ secrets.ML_MODEL_NAME_URI }}" >> .env

      - name: Construir la imagen de la API
        run: docker build -t securemail:v1.0.0 .

      - name: Iniciar API en Docker
        run: |
          docker run -d --name securemail_container \
            -e HYBRID_ANALYSIS_API_KEY="${{ secrets.HYBRID_ANALYSIS_API_KEY }}" \
            -e HYBRID_ANALYSIS_API_URL="${{ secrets.HYBRID_ANALYSIS_API_URL }}" \
            -e ML_MODEL_NAME_URI="${{ secrets.ML_MODEL_NAME_URI }}" \
            -p 8080:8080 securemail:v1.0.0

      - name: Iniciar OWASP ZAP en modo daemon
        run: docker run -d --name zap -p 8090:8090 owasp/zap2docker-stable zap.sh -daemon -host 0.0.0.0 -port 8090

      - name:  Esperar a que OWASP ZAP est√© listo
        run: sleep 20

      - name: Iniciar escaneo activo contra la API
        run: |
          curl "http://localhost:8090/JSON/ascan/action/scan/?url=http://host.docker.internal:8080&recurse=true"

      - name: Generar reporte de OWASP ZAP
        run: |
          curl "http://localhost:8090/OTHER/core/other/htmlreport/" -o zap-report.html

      - name: Subir Reporte OWASP ZAP
        uses: actions/upload-artifact@v4  
        with:
          name: ZAP-Report
          path: zap-report.html

      - name: üö® Revisar vulnerabilidades y fallar el build si hay hallazgos graves
        run: |
          HIGH=$(grep -o "High Risk Alerts: [0-9]*" zap-report.html | awk '{print $4}')
          MEDIUM=$(grep -o "Medium Risk Alerts: [0-9]*" zap-report.html | awk '{print $4}')
          LOW=$(grep -o "Low Risk Alerts: [0-9]*" zap-report.html | awk '{print $4}')


          if [ "$HIGH" -gt 0 ]; then
            echo "‚ùå Se encontraron vulnerabilidades GRAVES. Falla el pipeline."
            exit 1
          elif [ "$MEDIUM" -gt 5 ]; then
            echo "‚ö†Ô∏è Se encontraron m√°s de 5 vulnerabilidades de nivel MEDIO. Falla el pipeline."
            exit 1
          elif [ "$LOW" -gt 10 ]; then
            echo "üîµ Hay demasiadas vulnerabilidades de nivel BAJO. Falla el pipeline."
            exit 1
          else
            echo "‚úÖ No se encontraron vulnerabilidades cr√≠ticas."
          fi

      - name: üõë Limpiar contenedores
        run: |
          docker stop securemail_container zap
          docker rm securemail_container zap
