name: AUTO-CI-ZAP-DAST-ANALYSIS

on:
  push:
    branches:
      - main
      - development
      - preproduction

jobs:
  zap_scan:
    name: OWASP ZAP Full Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker
        run: docker --version

      - name: Build and Run API Container
        run: |
          echo " Construyendo la imagen de la API..."
          docker build -t securemail:v1.0.0 .

          echo " Creando red Docker..."
          docker network create my-network

          echo " Iniciando API en Docker en el puerto 10000..."
          docker run -d --network my-network --name securemail_container \
            -e HYBRID_ANALYSIS_API_KEY="$HYBRID_ANALYSIS_API_KEY" \
            -e HYBRID_ANALYSIS_API_URL="$HYBRID_ANALYSIS_API_URL" \
            -e ML_MODEL_NAME_URI="$ML_MODEL_NAME_URI" \
            -p 10000:10000 securemail:v1.0.0

          echo "⌛ Esperando 60 segundos para que la API esté lista..."
          sleep 60

      - name: Run OWASP ZAP Full Scan
        run: |
          echo " Descargando y ejecutando OWASP ZAP en modo headless..."
          docker pull zaproxy/zap-stable

          echo " Iniciando OWASP ZAP en segundo plano en el puerto 8090..."
          docker run -u zap -d --network my-network --name zap_scan \
            -p 8090:8090 \
            -v zap_work_dir:/zap/wrk \ # Monta un volumen temporal
            zaproxy/zap-stable zap.sh -daemon \
            -host 0.0.0.0 -port 8090 \
            -config api.addrs.addr.name=.* \
            -config api.addrs.addr.regex=true

  
          echo " Ejecutando escaneo con OWASP ZAP contra la API en http://securemail_container:10000..."
          docker exec zap_scan zap-full-scan.py -t http://securemail_container:10000 -r zap_report.html -T 15

          echo " Guardando reporte de ZAP..."
          docker cp zap_scan:/zap/wrk/zap_report.html .

      - name: Test ZAP Connectivity
        run: docker exec zap_scan curl http://localhost:8090

      - name: Get ZAP Logs
        if: always()
        run: docker logs zap_scan > zap_logs.txt

      - name: Upload ZAP Logs
        uses: actions/upload-artifact@v4
        with:
          name: zap-logs
          path: zap_logs.txt

      - name: Stop and Remove Containers
        if: always()
        run: |
          echo " Deteniendo contenedores..."
          docker stop zap_scan securemail_container
          docker rm zap_scan securemail_container
          docker network rm my-network
