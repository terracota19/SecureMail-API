name: Ejecutar Docker Bench y Mostrar Resultados en el Summary

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  docker_bench_security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Clonar Docker Bench Security
        run: git clone https://github.com/docker/docker-bench-security.git

      - name: Construir la imagen de Docker Bench Security
        run: |
          docker build -t securemail:v1.0.0 .  
          docker run -d -p 10000:10000 \
            -e HYBRID_ANALYSIS_API_KEY=${{ secrets.HYBRID_ANALYSIS_API_KEY }} \
            -e HYBRID_ANALYSIS_API_URL=${{ secrets.HYBRID_ANALYSIS_API_URL }} \
            -e ML_MODEL_NAME_URI=${{ secrets.ML_MODEL_NAME_URI }} \
            --name securemail securemail:v1.0.0   
          docker ps
          cd docker-bench-security
          docker run --rm --net host --pid host --userns host --cap-add audit_control \
          -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \
          -v /etc:/etc:ro \
          -v /usr/bin/containerd:/usr/bin/containerd:ro \
          -v /usr/bin/runc:/usr/bin/runc:ro \
          -v /usr/lib/systemd:/usr/lib/systemd:ro \
          -v /var/lib:/var/lib:ro \
          -v /var/run/docker.sock:/var/run/docker.sock:ro \
          --label docker_bench_security \
          docker-bench-security | tee ../docker-bench-security-report.txt
          

      - name: Mostrar resultados en el Summary
        run: |
          echo "## Resultados de Docker Bench Security" >> $GITHUB_STEP_SUMMARY
          echo "Fecha de análisis: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "### Resumen del Análisis:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          # Limpiar colores y formatos no deseados del archivo de reporte
          sed 's/\x1b\[[0-9;]*m//g' docker-bench-security-report.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
